<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Wdc.DirectoryLib</name>
    </assembly>
    <members>
        <member name="T:Wdc.DirectoryLib.Context">
            <summary>
            Wrapper around Active Directory Services
            </summary>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.#ctor(System.String,Wdc.DirectoryLib.Types.SearchType)">
            <summary>
            Initialize new instance of this active directory context.
            </summary>
            <param name="gcHostname">The Global Catalog Hostname a Domain Controller.
            If no hostname is provided, the current context is used.
            <param name="searchType">Whether the searches will be done as GC (default) or LDAP. 
            Global Catalog will ensure that the results are searched for in the entire catalog (whether in the host 
            or other domains in the forest)
            But, if the host controller happens to contains the search entities, LDAP can be faster.</param>
            </param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUser(System.String,System.String)">
            <summary>
            Get user by domain (exmpl.wdc.com) and SAM Account Name (last_f)
            </summary>
            <param name="domain">Domain (exmpl.wdc.com)</param>
            <param name="samAccountName">SAM Account Name (last_f)</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUserByEmail(System.String,System.String)">
            <summary>
            Get user by email address (user@exampl.wdc.com)
            </summary>
            <param name="email">Email address (user@exmpl.wdc.com)</param>
            <param name="baseDistinguishedName">Optional distinguished name of domain to search under</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUserByUpn(System.String,System.String)">
            <summary>
            Get user by UserPrincipalName (last_f@exmpl.wdc.com)
            </summary>
            <param name="upn">UserPrincipalName (last_f@exmpl.wdc.com)</param>
            <param name="baseDistinguishedName">Optional distinguished name of domain to search under</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUserByGuid(System.Guid,System.String)">
            <summary>
            Get user by GetUserByGuid
            </summary>
            <param name="guid">Represents the GUID for the object we are searching for</param>
            <param name="baseDistinguishedName">Optional distinguished name of domain to search under</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUserByGuid(System.Byte[],System.String)">
            <summary>
            Get user by GUID
            </summary>
            <param name="guid">Array of 16 bytes</param>
            <param name="baseDistinguishedName">Optional distinguished name of domain to search under</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUserByGuid(System.String,System.String)">
            <summary>
            Get user by GUID
            </summary>
            <param name="guidString">String (hex) representation of guid (e.g. F47AC10B-58CC-4372-A567-0E02B2C3D479)</param>
            <param name="baseDistinguishedName">Optional distinguished name of domain to search under</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUserByNtName(System.String)">
            <summary>
            Get user by NT Name (exmpl\last_f).
            This can be slower than other GetUser() methods due to a call to GetDomainNameByNetBios()
            </summary>
            <param name="ntName">NT Name (exmpl\last_f)</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.Authenticate(Wdc.DirectoryLib.Types.UserAccount,System.String,System.Int64)">
            <summary>
            Perform authentication and return the status for the account.
            </summary>
            <param name="user">The user account object</param>
            <param name="password">The user password in plaintext</param>
            <param name="daysToExpiration">The number of days until the password expires</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetNetBiosNameByDomainName(System.String)">
            <summary>
            Convert DomainName (exmpl.wdc.com) to NetBiosName (exmpl)
            </summary>
            <param name="domainName">Domain Name (exmpl.wdc.com)</param>
            <returns>NetBiosName (exmpl)</returns>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetDomainNameByNetBios(System.String)">
            <summary>
            Convert NetBiosName (exmpl) to DomainName (exmpl.wdc.com)
            </summary>
            <param name="netBiosName">NetBiosName (exmpl)</param>
            <returns>DomainName (exmpl.wdc.com)</returns>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetMaxPasswordAgeInDays(System.String)">
            <summary>
            Gets the maxPwdAge property on the domain (exmpl.wdc.com).
            This is days until the password expires unless the account has PasswordNeverExpires.
            </summary>
            <param name="domain">Domain Name (exmpl.wdc.com)</param>
            <returns>Days until a password expires</returns>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetUserFromResult(System.DirectoryServices.SearchResult)">
            <summary>
            Returns UserAccount object from a given search result
            </summary>
            <param name="result">SearchResult computed by one of the other GetUser methods</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetDomainFromDistinguishedName(System.String)">
            <summary>
            Extracts the domain component (exmpl.wdc.com) from distinguished name (...DC=exmpl,DC=wdc,DC=com)
            </summary>
            <param name="distinguishedName">Distinguished Name</param>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.GetDirectoryPath(System.String)">
            <summary>
            Helper function that provides the directory path string to pass onto DirectoryEntry()
            constructor.
            </summary>
            <param name="baseDistinguishedName">Optional distinguished name of domain to search under.</param>
            <returns></returns>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.ConvertDomainToDistinguishedNameFormat(System.String)">
            <summary>
            Convert (example.wdc.com) -> DC=example,DC=wdc,DC=com
            </summary>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.ConvertDistinguishedNameToDomainFormat(System.String)">
            <summary>
            Convert (DC=example,DC=wdc,DC=com) -> example.wdc.com
            </summary>
            <param name="distinguishedName"></param>
            <returns></returns>
        </member>
        <member name="M:Wdc.DirectoryLib.Context.PrintOutResult(System.DirectoryServices.SearchResult)">
            <summary>
            For debugging purposes only. Prints out the contents of the SearchResult object
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:Wdc.DirectoryLib.Types.AccountStatus">
            <summary>
            The result after an authentication attempt.
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.AccountStatus.UserNotFound">
            <summary>
            No user found matching the supplied account credentials. Typically a typo.
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.AccountStatus.Success">
            <summary>
            The user supplied the correct credentials and successfully authenticated.
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.AccountStatus.InvalidPassword">
            <summary>
            The user supplied the wrong password for the account.
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.AccountStatus.ExpiredPassword">
            <summary>
            The user's password is expired and must be changed. Typically this expires every 90 days.
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.AccountStatus.MustChangePassword">
            <summary>
            The "user must change password at next logon" since LastPasswordSet=null. Typically for new accounts.
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.AccountStatus.UserLockedOut">
            <summary>
            The user account is locked. Typically too many incorrect attempts.
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.SearchType.GlobalCatalog">
            <summary>
            Searches the entire Global Catalog
            </summary>
        </member>
        <member name="F:Wdc.DirectoryLib.Types.SearchType.LDAP">
            <summary>
            Does an LDAP search on just the host (does not look at other domains). Faster if the domain is known
            </summary>
        </member>
        <member name="T:Wdc.DirectoryLib.Types.UserAccount">
            <summary>
            The account object for a Person/User in Active Directory.
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.ObjectGuid">
            <summary>
            The unique identifier for an object.
            This 16-byte value is set when the object is created and cannot be changed.
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.ObjectGuidAsHex">
            <summary>
            The Guid represented as a Hex String.
            Since the Guid is 16 bytes, this string is 32 characters.
            Use ObjectGuidAsString instead if you want to be able to lookup a user using GetUserByGuid()
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.ObjectGuidAsString">
            <summary>
            The Guid represented as a 36 character Hex String (UUID 4)
            (of the form XXXXXXXX-XXXX-4XXX-YXXX-XXXXXXXXXXXX
            where X is any hexadecimal digit and Y is one of 8, 9, A, or B)
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.CommonName">
            <summary>
            The common name that is usually the same as DisplayName.
            Example: Joe Q. Johnson
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.DisplayName">
            <summary>
            The display name for an object. This is usually
            the combination of the users first name, middle initial, and last name.
            Example: Joe Q. Johnson
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.GivenName">
            <summary>
            Contains the given name (first name) of the user.
            Example: Joe
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.SurName">
            <summary>
            This attribute contains the family or last name for a user.
            Example: Johnson
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Email">
            <summary>
            The email address for this contact.
            Example: Joe-Q-Johnson@wdc.com
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Phone">
            <summary>
            The primary telephone number.
            Example: 949-672-7000
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Mobile">
            <summary>
            The primary mobile phone number.
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Title">
            <summary>
            Contains the user's job title. This property is commonly used to indicate the formal job title, 
            such as Senior Programmer, rather than occupational class, such as programmer.
            It is not typically used for suffix titles such as Esq. or DDS.
            Example: Sr. Software Engineer
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Department">
            <summary>
            Contains the name for the department in which the user works.
            Example: Software Tools
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.PhysicalDeliveryOfficeName">
            <summary>
            Office number or cubicle number.
            Example: 1-2079
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.LocalityName">
            <summary>
            Represents the name of a locality, such as a town or city.
            Example: Irvine
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.StateOrProvinceName">
            <summary>
            The name of a user's state or province.
            Example: CA
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.CountryName">
            <summary>
            The country/region in the address of the user.
            The country/region is represented as a 2-character code based on ISO-3166.
            Example: US
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Description">
            <summary>
            Contains the description to display for an object.
            This value is restricted as single-valued for backward compatibility in some cases.
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Domain">
            <summary>
            Fully qualified domain name.
            Example: exmpl.wdc.com
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.DistinguishedName">
            <summary>
            Same as the Distinguished Name for an object. Used by Exchange
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.SamAccountName">
            <summary>
            The logon name used to support clients and servers running earlier versions of the operating system, 
            such as Windows NT 4.0, Windows 95, Windows 98, and LAN Manager.
            This attribute must be 20 characters or less to support earlier clients.
            Typically formatted as lastname_f such as johnson_j.
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.UserPrincipalName">
            <summary>
            This attribute contains the UPN that is an Internet-style login name for a user based on the 
            Internet standard RFC 822. The UPN is shorter than the distinguished name and easier to remember. 
            By convention, this should map to the user email name, but this is not required.
            The value set for this attribute is equal to the length of the user's ID and the domain name.
            Typically formatted as lastname_f@domain such as johnson_j@exmpl.wdc.com
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.JpegPhoto">
            <summary>
            Used to store an image of a person using the JPEG File Interchange Format.
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.Manager">
            <summary>
            Contains the distinguished name of the user who is the user's manager.
            </summary>
        </member>
        <member name="P:Wdc.DirectoryLib.Types.UserAccount.DirectReports">
            <summary>
            Contains the list of users that directly report to the user. The users that are listed as 
            reports are those that have the property manager property set to this user. Each item in the 
            list is a linked reference to the object that represents the user.
            </summary>
        </member>
    </members>
</doc>
